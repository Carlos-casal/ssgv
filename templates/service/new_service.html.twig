{% extends 'base.html.twig' %} {# Asegúrate de que tu base.html.twig incluye Tailwind CSS compilado #}

{% block title %}Crear Nuevo Servicio{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        label.required {
            color: red;
        }
        label.required:after {
            content: " *";
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mx-auto px-4 py-8"> {# Contenedor centrado y con padding #}
        <h1 class="text-3xl font-bold mb-6 text-gray-800">Crear Nuevo Servicio</h1>

        {# Mensajes flash (ej. "¡El servicio ha sido creado con éxito!") #}
        {% for message in app.flashes('success') %}
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">¡Éxito!</strong>
                <span class="block sm:inline">{{ message }}</span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                    <svg class="fill-current h-6 w-6 text-green-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" onclick="this.parentElement.parentElement.style.display='none';"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                </span>
            </div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">¡Error!</strong>
                <span class="block sm:inline">{{ message }}</span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                    <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" onclick="this.parentElement.parentElement.style.display='none';"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                </span>
            </div>
        {% endfor %}

        {# Contenedor principal del formulario con sombra y bordes redondeados #}
        <div class="bg-white shadow-md rounded-lg p-6 mb-8">
            {{ form_start(serviceForm) }}

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                {# Fila 1: Numeración y Título #}
                <div>{{ form_row(serviceForm.numeration) }}</div>
                <div>{{ form_row(serviceForm.title) }}</div>

                {# Fila 2: Fechas #}
                <div>{{ form_row(serviceForm.startDate) }}</div>
                <div>{{ form_row(serviceForm.endDate) }}</div>

                {# Fila 3: Límite y Asistentes #}
                <div>{{ form_row(serviceForm.registrationLimitDate) }}</div>
                <div>{{ form_row(serviceForm.maxAttendees) }}</div>

                {# Fila 4: Horas #}
                <div>{{ form_row(serviceForm.timeAtBase) }}</div>
                <div>{{ form_row(serviceForm.departureTime) }}</div>

                {# Fila 5: Tipo con botón #}
                <div>
                    {{ form_row(serviceForm.type) }}
                    <a href="#" class="text-sm text-blue-600 hover:underline mt-2 inline-block">
                        <i data-lucide="plus-circle" class="inline-block w-4 h-4 mr-1" style="vertical-align: -2px;"></i>
                        Añadir nuevo tipo
                    </a>
                </div>

                {# Fila 6: Categoría con botón #}
                <div>
                    {{ form_row(serviceForm.category) }}
                    <a href="#" class="text-sm text-blue-600 hover:underline mt-2 inline-block">
                        <i data-lucide="plus-circle" class="inline-block w-4 h-4 mr-1" style="vertical-align: -2px;"></i>
                        Añadir nueva categoría
                    </a>
                </div>

                {# Fila 7: Descripción #}
                <div class="md:col-span-2">
                    {{ form_row(serviceForm.description) }}
                </div>
            </div>

            {{ form_rest(serviceForm) }}

            {# Botones de acción #}
            <div class="flex items-center justify-end mt-6">
                <a href="{{ path('app_services_list') }}" class="bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-lg transition-colors">
                    Volver a la Lista
                </a>
                <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-colors ml-3">
                    Guardar Servicio
                </button>
            </div>

            {{ form_end(serviceForm) }}
        </div>
    </div>

    <script src="https://cdn.ckeditor.com/4.25.1-lts/standard/ckeditor.js"></script>
    <script>
        function initializeCKEditor() {
            const editorId = '{{ serviceForm.description.vars.id }}';

            // Destroy existing instance if it exists, to prevent errors on Turbo re-load
            if (CKEDITOR.instances[editorId]) {
                CKEDITOR.instances[editorId].destroy(true);
            }

            // Create new instance if the textarea exists
            if (document.getElementById(editorId)) {
                CKEDITOR.replace(editorId);
            }
        }

        // Listen for both initial page load and Turbo page loads
        document.addEventListener('turbo:load', initializeCKEditor);
        document.addEventListener('DOMContentLoaded', initializeCKEditor);
    </script>
{% endblock %}