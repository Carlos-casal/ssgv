{% extends 'base.html.twig' %}

{% block body %}
<div class="flex h-screen bg-gray-50">
    <!-- Sidebar -->
    {% include 'layout/sidebar.html.twig' %}
    
    <!-- Main content -->
    <div class="flex-1 flex flex-col overflow-hidden">
        <!-- Header -->
        {% include 'layout/header.html.twig' %}

        <!-- Main content area -->
        <main class="flex-1 overflow-y-auto">
            {% for message in app.flashes('success') %}
                <div class="mx-6 mt-4 p-4 bg-green-50 border border-green-200 rounded-lg">
                    <div class="flex items-center">
                        <i data-lucide="check-circle" class="w-5 h-5 text-green-500 mr-2"></i>
                        <span class="text-green-800">{{ message }}</span>
                    </div>
                </div>
            {% endfor %}
            
            {% for message in app.flashes('error') %}
                <div class="mx-6 mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                    <div class="flex items-center">
                        <i data-lucide="alert-circle" class="w-5 h-5 text-red-500 mr-2"></i>
                        <span class="text-red-800">{{ message }}</span>
                    </div>
                </div>
            {% endfor %}
            
            {% block content %}{% endblock %}
        </main>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('turbo:load', () => {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebar-toggle');
            const toggleIcon = sidebarToggle ? sidebarToggle.querySelector('i') : null;

            if (sidebarToggle) {
                // Set initial state based on localStorage
                if (localStorage.getItem('sidebar_collapsed') === 'true') {
                    sidebar.classList.add('collapsed');
                    if(toggleIcon) toggleIcon.setAttribute('data-lucide', 'chevrons-right');
                } else {
                    sidebar.classList.remove('collapsed');
                    if(toggleIcon) toggleIcon.setAttribute('data-lucide', 'chevrons-left');
                }
                if (typeof lucide !== 'undefined') lucide.createIcons();


                sidebarToggle.addEventListener('click', () => {
                    sidebar.classList.toggle('collapsed');

                    const isCollapsed = sidebar.classList.contains('collapsed');
                    localStorage.setItem('sidebar_collapsed', isCollapsed);

                    if (isCollapsed) {
                        toggleIcon.setAttribute('data-lucide', 'chevrons-right');
                    } else {
                        toggleIcon.setAttribute('data-lucide', 'chevrons-left');
                    }
                    if (typeof lucide !== 'undefined') lucide.createIcons();
                });
            }
        });
    </script>
{% endblock %}