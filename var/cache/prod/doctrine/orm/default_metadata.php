<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__User__CLASSMETADATA__' => 0,
'App__Entity__Volunteer__CLASSMETADATA__' => 1,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'roles' => $o[3],
                        'password' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'quoted' => true,
                    ],
                ],
                'associationMappings' => [
                    [
                        'volunteer' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'json',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                ],
                'length' => [
                    2 => 180,
                ],
                'unique' => [
                    2 => true,
                ],
                'cascade' => [
                    5 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\User',
                ],
                'mappedBy' => [
                    5 => 'user',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'volunteer',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Volunteer',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Volunteer',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\VolunteerRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'lastName' => $o[3],
                        'phone' => $o[4],
                        'dni' => $o[5],
                        'dateOfBirth' => $o[6],
                        'streetType' => $o[7],
                        'address' => $o[8],
                        'postalCode' => $o[9],
                        'province' => $o[10],
                        'city' => $o[11],
                        'contactPerson1' => $o[12],
                        'contactPhone1' => $o[13],
                        'contactPerson2' => $o[14],
                        'contactPhone2' => $o[15],
                        'allergies' => $o[16],
                        'profession' => $o[17],
                        'employmentStatus' => $o[18],
                        'drivingLicenses' => $o[19],
                        'drivingLicenseExpiryDate' => $o[20],
                        'languages' => $o[21],
                        'motivation' => $o[22],
                        'howKnown' => $o[23],
                        'hasVolunteeredBefore' => $o[24],
                        'previousVolunteeringInstitutions' => $o[25],
                        'otherQualifications' => $o[26],
                        'navigationLicenses' => $o[27],
                        'specificQualifications' => $o[28],
                        'role' => $o[29],
                        'status' => $o[30],
                        'joinDate' => $o[31],
                        'specialization' => $o[32],
                        'profilePicture' => $o[33],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'last_name' => 'lastName',
                        'phone' => 'phone',
                        'dni' => 'dni',
                        'date_of_birth' => 'dateOfBirth',
                        'street_type' => 'streetType',
                        'address' => 'address',
                        'postal_code' => 'postalCode',
                        'province' => 'province',
                        'city' => 'city',
                        'contact_person1' => 'contactPerson1',
                        'contact_phone1' => 'contactPhone1',
                        'contact_person2' => 'contactPerson2',
                        'contact_phone2' => 'contactPhone2',
                        'allergies' => 'allergies',
                        'profession' => 'profession',
                        'employment_status' => 'employmentStatus',
                        'driving_licenses' => 'drivingLicenses',
                        'driving_license_expiry_date' => 'drivingLicenseExpiryDate',
                        'languages' => 'languages',
                        'motivation' => 'motivation',
                        'how_known' => 'howKnown',
                        'has_volunteered_before' => 'hasVolunteeredBefore',
                        'previous_volunteering_institutions' => 'previousVolunteeringInstitutions',
                        'other_qualifications' => 'otherQualifications',
                        'navigation_licenses' => 'navigationLicenses',
                        'specific_qualifications' => 'specificQualifications',
                        'role' => 'role',
                        'status' => 'status',
                        'join_date' => 'joinDate',
                        'specialization' => 'specialization',
                        'profile_picture' => 'profilePicture',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'lastName' => 'last_name',
                        'phone' => 'phone',
                        'dni' => 'dni',
                        'dateOfBirth' => 'date_of_birth',
                        'streetType' => 'street_type',
                        'address' => 'address',
                        'postalCode' => 'postal_code',
                        'province' => 'province',
                        'city' => 'city',
                        'contactPerson1' => 'contact_person1',
                        'contactPhone1' => 'contact_phone1',
                        'contactPerson2' => 'contact_person2',
                        'contactPhone2' => 'contact_phone2',
                        'allergies' => 'allergies',
                        'profession' => 'profession',
                        'employmentStatus' => 'employment_status',
                        'drivingLicenses' => 'driving_licenses',
                        'drivingLicenseExpiryDate' => 'driving_license_expiry_date',
                        'languages' => 'languages',
                        'motivation' => 'motivation',
                        'howKnown' => 'how_known',
                        'hasVolunteeredBefore' => 'has_volunteered_before',
                        'previousVolunteeringInstitutions' => 'previous_volunteering_institutions',
                        'otherQualifications' => 'other_qualifications',
                        'navigationLicenses' => 'navigation_licenses',
                        'specificQualifications' => 'specific_qualifications',
                        'role' => 'role',
                        'status' => 'status',
                        'joinDate' => 'join_date',
                        'specialization' => 'specialization',
                        'profilePicture' => 'profile_picture',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'volunteer',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[34],
                    ],
                ],
                'idGenerator' => [
                    $o[36],
                ],
                'name' => [
                    'App\\Entity\\Volunteer',
                    35 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'date',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'text',
                    'string',
                    'string',
                    'json',
                    'date',
                    'text',
                    'text',
                    'string',
                    'boolean',
                    'text',
                    'text',
                    'json',
                    'json',
                    'string',
                    'string',
                    'datetime',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'lastName',
                    'phone',
                    'dni',
                    'dateOfBirth',
                    'streetType',
                    'address',
                    'postalCode',
                    'province',
                    'city',
                    'contactPerson1',
                    'contactPhone1',
                    'contactPerson2',
                    'contactPhone2',
                    'allergies',
                    'profession',
                    'employmentStatus',
                    'drivingLicenses',
                    'drivingLicenseExpiryDate',
                    'languages',
                    'motivation',
                    'howKnown',
                    'hasVolunteeredBefore',
                    'previousVolunteeringInstitutions',
                    'otherQualifications',
                    'navigationLicenses',
                    'specificQualifications',
                    'role',
                    'status',
                    'joinDate',
                    'specialization',
                    'profilePicture',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'last_name',
                    'phone',
                    'dni',
                    'date_of_birth',
                    'street_type',
                    'address',
                    'postal_code',
                    'province',
                    'city',
                    'contact_person1',
                    'contact_phone1',
                    'contact_person2',
                    'contact_phone2',
                    'allergies',
                    'profession',
                    'employment_status',
                    'driving_licenses',
                    'driving_license_expiry_date',
                    'languages',
                    'motivation',
                    'how_known',
                    'has_volunteered_before',
                    'previous_volunteering_institutions',
                    'other_qualifications',
                    'navigation_licenses',
                    'specific_qualifications',
                    'role',
                    'status',
                    'join_date',
                    'specialization',
                    'profile_picture',
                ],
                'length' => [
                    2 => 255,
                    255,
                    20,
                    15,
                    7 => 50,
                    255,
                    10,
                    100,
                    100,
                    255,
                    20,
                    255,
                    20,
                    17 => 100,
                    100,
                    23 => 255,
                    29 => 100,
                    20,
                    32 => 255,
                    255,
                ],
                'nullable' => [
                    3 => true,
                    5 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    33 => true,
                    35 => false,
                ],
                'unique' => [
                    5 => true,
                    35 => true,
                ],
                'cascade' => [
                    34 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    34 => 2,
                ],
                'sourceEntity' => [
                    34 => 'App\\Entity\\Volunteer',
                ],
                'inversedBy' => [
                    34 => 'volunteer',
                ],
                'sourceToTargetKeyColumns' => [
                    34 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    34 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    34 => [
                        $o[35],
                    ],
                ],
                'joinColumnFieldNames' => [
                    34 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'deferrable' => [
                    35 => false,
                ],
                'referencedColumnName' => [
                    35 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    34 => 'user',
                ],
                'targetEntity' => [
                    34 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
